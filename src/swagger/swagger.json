{
  "openapi": "3.0.0",
  "info": {
    "title": "Valex API",
    "description": "[ BaseUrl: https://driven-valex-2.herokuapp.com ]",
    "version": "1.0.0"
  },

  "paths": {
    
    "/cards": {
      "post": {
        "summary": "Create a new card",
        "description": "Create a new card for an employee",
        "security": [{ "APIKey": [] }],
        "parameters": [{
          "name": "x-api-key",
          "in": "header",
          "description": "API Key",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCard"
              },
              "examples": {
                "CreateCard": {
                  "value": {
                    "employeeId": 1,
                    "cardType": "education"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable entity"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },

    "/cards/activate/:id": {
      "put": {
        "summary": "Activate a card",
        "description": "Activate a card by its ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Card ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateCard"
              },
              "examples": {
                "ActivateCard": {
                  "value": {
                    "cvv": "123",
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable entity"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/cards/block/:id": {
      "put": {
        "summary": "Block a card",
        "description": "Block a card by its ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Card ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockCard"
              },
              "examples": {
                "BlockCard": {
                  "value": {
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable entity"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/cards/unblock/:id": {
      "put": {
        "summary": "Unblock a card",
        "description": "Unblock a card by its ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Card ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockCard"
              },
              "examples": {
                "UnblockCard": {
                  "value": {
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Email already registered"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/cards/transactions/:id": {
      "get": {
        "summary": "Get balance and transactions",
        "description": "Get balance and transactions (recharges and payments) by card ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Card ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }],
        "responses": {
          "422": {
            "description": "Unprocessable entity"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions"
                }
              }
            }
          }
        }
      }
    },

    "/recharges/:id": {
      "post": {
        "summary": "Create a new recharge for a card",
        "description": "Create a new recharge for a card by card ID",
        "security": [{ "APIKey": [] }],
        "parameters": [{
          "name": "x-api-key",
          "in": "header",
          "description": "API Key",
          "required": true,
          "schema": {
            "type": "string"
          }
        },{
          "name": "id",
          "in": "path",
          "description": "Card ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecharge"
              },
              "examples": {
                "CreateRecharge": {
                  "value": {
                    "amount": 60000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable entity"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },

    "/payments/:id": {
      "post": {
        "summary": "Create a new recharge for a card",
        "description": "Create a new recharge for a card by card ID",
        "security": [{ "APIKey": [] }],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Card ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayment"
              },
              "examples": {
                "CreatePayment": {
                  "value": {
                    "businessId": 1,
                    "password": "1234",
                    "amount": 60000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable entity"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    }

  },
  "components":{
    "schemas": {
      "CreateCard": {
        "type": "object",
        "required": [
          "employeeId", 
          "cardType"
        ],
        "properties": {
          "employeeId": {
            "type": "integer"
          },
          "cardType": {
            "type": "education | health | groceries | restaurant | transport"
          }
        }
      },
      "ActivateCard": {
        "type": "object",
        "required": [
          "cvv", 
          "password"
        ],
        "properties": {
          "cvv": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "BlockCard": {
        "type": "object",
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "UnblockCard": {
        "type": "object",
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "CreateRecharge": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "integer"
          }
        }
      },
      "CreatePayment": {
        "type": "object",
        "required": [
          "amount",
          "businessId",
          "password"
        ],
        "properties": {
          "amount": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Transactions": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer"
          },
          "recharges" : {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recharges"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payments"
            }
          }
        }
      },
      "APiKey": {
        "type": "object",
        "properties": {
          "x-api-key": {
            "type": "string"
          }
        }
      },
      "Recharges": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cardId" : {
            "type": "integer"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "Payments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cardId" : {
            "type": "integer"
          },
          "businessId" : {
            "type": "integer"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "integer"
          },
          "businessName": {
            "type": "string"
          }
        }
      }
      
    }
  }
}